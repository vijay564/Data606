knitr::opts_chunk$set(echo = TRUE)
library(DATA606)
1 - pnorm(-1.35, mean = 0, sd = 1)
normalPlot(mean = 0, sd = 1, bounds=c(-Inf,-1.35), tails = F)
1-pnorm(1.48, mean = 0, sd = 1)
normalPlot(mean = 0, sd = 1, bounds=c(1.48,Inf), tails = F)
1-pnorm(c(-0.4,1.5), mean = 0, sd = 1)
normalPlot(mean = 0, sd = 1, bounds=c(-0.4,1.5), tails = F)
1-pnorm(2, mean = 0, sd = 1)
normalPlot(mean = 0, sd = 1, bounds=c(2,Inf), tails = F)
(Z_Leo <- (4948-4313)/583)
(Z_Mary <- (5513-5261)/807)
round(pnorm(Z_Leo)*100, 2)
round(pnorm(Z_Mary)*100, 2)
heights <- c(54, 55, 56, 56, 57, 58,58, 59, 60, 60, 60, 61, 61, 62, 62, 63, 63, 63, 64, 65, 65, 67, 67, 69, 73)
heights_mean <- mean(heights)
heights_sd <- sd(heights)
#For 1 SD
heights_upper1 <- heights_mean + heights_sd
heights_lower1 <- heights_mean - heights_sd
#For 2 SD
heights_upper2 <- heights_mean + (2*heights_sd)
heights_lower2 <- heights_mean - (2*heights_sd)
#For 3 SD
heights_upper3 <- heights_mean + (3*heights_sd)
heights_lower3 <- heights_mean - (3*heights_sd)
# Result of 1 SD
(length(heights[heights >= heights_lower1 & heights <= heights_upper1]) / length(heights) * 100)
# Result of 2 SD
(length(heights[heights >= heights_lower2 & heights <= heights_upper2]) / length(heights) * 100)
# Result of 3 SD
(length(heights[heights >= heights_lower3 & heights <= heights_upper3]) / length(heights) * 100)
(mean <- 1/0.02)
(SD <-sqrt((1 - 0.02)/0.02^2))
(first_defect_prob <- 1/0.05)
(sd <- sqrt((1 - 0.05)/0.05^2))
dbinom(2, 3, 0.51)
# Rule for disjoint
# P(B) = 0.51, P(G) = 1-0.51 = 0.49
# P = P[{G,B,B})+P({B,G,B})+P({B,B,G}]
prob <- ((0.49*0.51*0.51)+(0.51*0.49*0.51)+(0.51*0.51*0.49))
prob
dbinom(3,8,0.51)
n = 10
k = 3
p= 0.15
q = 0.85
(probability = (factorial(n-1)/(factorial(k-1)*factorial(n-k))*p^k*q^(n-k)))
setwd("E:/github/MS/DATA605")
knitr::opts_chunk$set(echo = TRUE)
X <- pmax(B,C)
X <- pmax(B,C)
X <- pmax(B,C)
X <- pmax(B,C)
X <- pmax(B,C)
X <- pmax(B,C)
X <- pmax(B,C)
X <- pmax(B,C)
hist(X, main = "Histogram of max{B,C}")
d <- sum(X < .5) / 10000
d
X <- pmin(B,C)
B <- runif(10000, min = 0, max = 1)
C <- runif(10000, min = 0, max = 1)
B <- runif(10000, min = 0, max = 1)
hist(B)
hist(C)
X <- B + C
hist(X, main = "Histogram of B + C")
a <- sum(X < .5) / 10000
a
X <- B * C
hist(X, main = "Histogram of B x C")
b <- sum(X < .5) / 10000
b
X <- abs(B - C)
hist(X, main = "Histogram of |B − C|")
c <- sum(X < .5) / 10000
c
X <- pmax(B,C)
hist(X, main = "Histogram of max{B,C}")
d <- sum(X < .5) / 10000
d
X <- pmin(B,C)
hist(X, main = "Histogram of min{B,C}")
e <- sum(X < .5) / 10000
e
hist(B)
hist(B)
# http://107.21.94.170/betsyrosalen/DATA605_Assignment5
B <- runif(10000, min = 0, max = 1)
C <- runif(10000, min = 0, max = 1)
hist(B)
hist(C)
# Find the probability that B + C < 1/2
X <- B + C
hist(X, main = "Hist of B + C")
(a <- sum(X < .5) / 10000)
# Find the probability that BC < 1/2
X <- B * C
hist(X, main = "Histogram of B x C")
(b <- sum(X < .5) / 10000)
# Find the probability that |B − C| < 1/2
X <- abs(B - C)
hist(X, main = "Histogram of |B − C|")
(c <- sum(X < .5) / 10000)
# Find the probability that max{B,C} < 1/2
X <- pmax(B,C)
hist(X, main = "Histogram of max{B,C}")
d <- sum(X < .5) / 10000
d
# Find the probability that min{B,C} < 1/2
X <- pmin(B,C)
hist(X, main = "Histogram of min{B,C}")
e <- sum(X < .5) / 10000
e
# http://107.21.94.170/betsyrosalen/DATA605_Assignment5
B <- runif(10000, min = 0, max = 1)
C <- runif(10000, min = 0, max = 1)
hist(B)
hist(C)
# Find the probability that B + C < 1/2
X <- B + C
hist(X, main = "Hist of B + C")
(a <- sum(X < .5) / 10000)
# Find the probability that BC < 1/2
X <- B * C
hist(X, main = "Histogram of B x C")
(b <- sum(X < .5) / 10000)
# Find the probability that |B − C| < 1/2
X <- abs(B - C)
hist(X, main = "Histogram of |B − C|")
(c <- sum(X < .5) / 10000)
# Find the probability that max{B,C} < 1/2
X <- pmax(B,C)
hist(X, main = "Histogram of max{B,C}")
d <- sum(X < .5) / 10000
d
# Find the probability that min{B,C} < 1/2
X <- pmin(B,C)
hist(X, main = "Histogram of min{B,C}")
e <- sum(X < .5) / 10000
e
setwd("E:/github/MS/DATA606")
(e <- sum(X < 0.5) / 10000)
# http://107.21.94.170/betsyrosalen/DATA605_Assignment5
B <- runif(10000, min = 0, max = 1)
C <- runif(10000, min = 0, max = 1)
hist(B)
hist(C)
# Find the probability that B + C < 1/2
X <- B + C
hist(X, main = "Hist of B + C")
(a <- sum(X < 0.5) / 10000)
# Find the probability that BC < 1/2
X <- B * C
hist(X, main = "Histogram of B x C")
(b <- sum(X < 0.5) / 10000)
# Find the probability that |B − C| < 1/2
X <- abs(B - C)
hist(X, main = "Histogram of |B − C|")
(c <- sum(X < 0.5) / 10000)
# Find the probability that max{B,C} < 1/2
X <- pmax(B,C)
hist(X, main = "Histogram of max{B,C}")
(d <- sum(X < 0.5) / 10000)
# Find the probability that min{B,C} < 1/2
X <- pmin(B,C)
hist(X, main = "Histogram of min{B,C}")
(e <- sum(X < 0.5) / 10000)
X <- pmax(B,C)
hist(X, main = "Histogram of max{B,C}")
(d <- sum(X < 0.5) / 10000)
X <- pmin(B,C)
hist(X, main = "Histogram of min{B,C}")
(e <- sum(X < 0.5) / 10000)
X <- pmin(B,C)
hist(X, main = "Histogram of min{B,C}")
(e <- sum(X < 0.5) / 10000)
X <- pmax(B,C)
hist(X, main = "Histogram of max{B,C}")
(d <- sum(X < 0.5) / 10000)
setwd("E:/github/MS/DATA606/Data606")
library(DATA606)
startLab('Lab4')
hist(mdims$hgt, xlab = "Men's Height in cm", col = "blue")
hist(mdims$hgt, xlab = "Men's Height in cm", col = "blue")
hist(mdims$hgt, xlab = "Men's Height in cm", col = "blue")
hist(mdims$hgt, xlab = "Men's Height in cm", col = "blue")
setwd("E:/github/MS/DATA606/Data606")
hist(mdims$hgt, xlab = "Men's Height in cm", col = "blue")
hist(mdims$hgt, xlab = "Men's Height in cm", col = "blue")
load("more/bdims.RData")
head(bdims)
mdims <- subset(bdims, sex == 1)
fdims <- subset(bdims, sex == 0)
hist(mdims$hgt, xlab = "Men's Height in cm", col = "blue")
fhgtmean <- mean(fdims$hgt)
fhgtsd   <- sd(fdims$hgt)
hist(fdims$hgt, probability = TRUE)
x <- 140:190
y <- dnorm(x = x, mean = fhgtmean, sd = fhgtsd)
lines(x = x, y = y, col = "blue")
qqnorm(fdims$hgt)
qqline(fdims$hgt)
sim_norm <- rnorm(n = length(fdims$hgt), mean = fhgtmean, sd = fhgtsd)
qqnormsim(fdims$hgt)
1 - pnorm(q = 182, mean = fhgtmean, sd = fhgtsd)
sum(fdims$hgt > 182) / length(fdims$hgt)
load("more/bdims.RData")
head(bdims)
mdims <- subset(bdims, sex == 1)
fdims <- subset(bdims, sex == 0)
hist(mdims$hgt, xlab = "Men's Height in cm", col = "orange")
fhgtmean <- mean(fdims$hgt)
fhgtsd   <- sd(fdims$hgt)
hist(fdims$hgt, probability = TRUE)
x <- 140:190
y <- dnorm(x = x, mean = fhgtmean, sd = fhgtsd)
lines(x = x, y = y, col = "blue")
qqnorm(fdims$hgt)
qqline(fdims$hgt)
sim_norm <- rnorm(n = length(fdims$hgt), mean = fhgtmean, sd = fhgtsd)
qqnormsim(fdims$hgt)
1 - pnorm(q = 182, mean = fhgtmean, sd = fhgtsd)
sum(fdims$hgt > 182) / length(fdims$hgt)
load("more/bdims.RData")
head(bdims)
mdims <- subset(bdims, sex == 1)
fdims <- subset(bdims, sex == 0)
# histogram of men's height
hist(mdims$hgt, xlab = "Men's Height", col = "orange")
#histogram of women's height
hist(fdims$hgt, xlab = "Women's Height", col = "green")
fhgtmean <- mean(fdims$hgt)
fhgtsd   <- sd(fdims$hgt)
hist(fdims$hgt, probability = TRUE)
x <- 140:190
y <- dnorm(x = x, mean = fhgtmean, sd = fhgtsd)
lines(x = x, y = y, col = "blue")
qqnorm(fdims$hgt)
qqline(fdims$hgt)
sim_norm <- rnorm(n = length(fdims$hgt), mean = fhgtmean, sd = fhgtsd)
qqnormsim(fdims$hgt)
1 - pnorm(q = 182, mean = fhgtmean, sd = fhgtsd)
sum(fdims$hgt > 182) / length(fdims$hgt)
load("more/bdims.RData")
head(bdims)
mdims <- subset(bdims, sex == 1)
fdims <- subset(bdims, sex == 0)
# histogram of men's height
hist(mdims$hgt, xlab = "Men's Height", col = "orange")
#histogram of women's height
hist(fdims$hgt, xlab = "Women's Height", col = "grey")
fhgtmean <- mean(fdims$hgt)
fhgtsd   <- sd(fdims$hgt)
hist(fdims$hgt, probability = TRUE)
x <- 140:190
y <- dnorm(x = x, mean = fhgtmean, sd = fhgtsd)
lines(x = x, y = y, col = "blue")
qqnorm(fdims$hgt)
qqline(fdims$hgt)
sim_norm <- rnorm(n = length(fdims$hgt), mean = fhgtmean, sd = fhgtsd)
qqnormsim(fdims$hgt)
1 - pnorm(q = 182, mean = fhgtmean, sd = fhgtsd)
sum(fdims$hgt > 182) / length(fdims$hgt)
# histogram of men's height
hist(mdims$hgt, xlab = "Men's Height", col = "orange")
#histogram of women's height
hist(fdims$hgt, xlab = "Women's Height", col = "grey")
# Mean of men's
mean(mdims$hgt)
#Mean of women's
mean(fdims$hgt)
# histogram of men's height
hist(mdims$hgt, xlab = "Men's Height", col = "orange")
#histogram of women's height
hist(fdims$hgt, xlab = "Women's Height", col = "grey")
# Mean of men's
mean(mdims$hgt)
#Mean of women's
mean(fdims$hgt)
# SD of men's
male_hgt_sd   <- sd(mdims$hgt)
# SD of female's
female_hgt_sd   <- sd(fdims$hgt)
# histogram of men's height
hist(mdims$hgt, xlab = "Men's Height", col = "orange")
#histogram of women's height
hist(fdims$hgt, xlab = "Women's Height", col = "grey")
# Mean of men's
mean(mdims$hgt)
#Mean of women's
mean(fdims$hgt)
# SD of men's
male_hgt_sd   <- sd(mdims$hgt)
# SD of female's
female_hgt_sd   <- sd(fdims$hgt)
load("more/bdims.RData")
head(bdims)
mdims <- subset(bdims, sex == 1)
fdims <- subset(bdims, sex == 0)
# histogram of men's height
hist(mdims$hgt, xlab = "Men's Height", col = "orange")
#histogram of women's height
hist(fdims$hgt, xlab = "Women's Height", col = "grey")
# Mean of men's
mean(mdims$hgt)
#Mean of women's
mean(fdims$hgt)
# SD of men's
male_hgt_sd   <- sd(mdims$hgt)
# SD of female's
female_hgt_sd   <- sd(fdims$hgt)
fhgtmean <- mean(fdims$hgt)
fhgtsd   <- sd(fdims$hgt)
hist(fdims$hgt, probability = TRUE)
x <- 140:190
y <- dnorm(x = x, mean = fhgtmean, sd = fhgtsd)
lines(x = x, y = y, col = "blue")
qqnorm(fdims$hgt)
qqline(fdims$hgt)
sim_norm <- rnorm(n = length(fdims$hgt), mean = fhgtmean, sd = fhgtsd)
qqnormsim(fdims$hgt)
1 - pnorm(q = 182, mean = fhgtmean, sd = fhgtsd)
sum(fdims$hgt > 182) / length(fdims$hgt)
sim_norm <- rnorm(n = length(fdims$hgt), mean = fhgtmean, sd = fhgtsd)
(sim_norm <- rnorm(n = length(fdims$hgt), mean = fhgtmean, sd = fhgtsd))
fhgtmean = mean(fdims$hgt)
fhgtsd = sd(fdims$hgt)
sim_norm <- rnorm(n = length(fdims$hgt), mean = fhgtmean, sd = fhgtsd)
hist(sim_norm)
# Normal plot
qqnorm(sim_norm)
qqline(sim_norm)
fhgtmean = mean(fdims$hgt)
fhgtsd = sd(fdims$hgt)
sim_norm <- rnorm(n = length(fdims$hgt), mean = fhgtmean, sd = fhgtsd)
hist(sim_norm, col = "blue")
# Normal plot
qqnorm(sim_norm)
qqline(sim_norm)
fhgtmean = mean(fdims$hgt)
fhgtsd = sd(fdims$hgt)
sim_norm <- rnorm(n = length(fdims$hgt), mean = fhgtmean, sd = fhgtsd)
hist(sim_norm, col = "blue")
# Normal plot
qqnorm(sim_norm)
qqline(sim_norm, col = "blue")
fhgtmean = mean(fdims$hgt)
fhgtsd = sd(fdims$hgt)
sim_norm <- rnorm(n = length(fdims$hgt), mean = fhgtmean, sd = fhgtsd)
hist(sim_norm, col = "blue")
# Normal plot
qqnorm(sim_norm)
qqline(sim_norm, col = "red")
qqnormsim(fdims$hgt)
qqnormsim(fdims$wgt)
hist(fdims$wgt)
qqnorm(fdims$wgt)
qqline(fdims$wgt)
qqnormsim(fdims$wgt)
#Theoretical Normal Distribution
pnorm(q = 161.5, mean = fhgtmean, sd = fhgtsd)
#Empirical distribution
sum(fdims$hgt > 161.5)/length(fdims$hgt)
#Theoretical Normal Distribution
fwgtmean <- mean(fdims$wgt)
fwgtsd   <- sd(fdims$wgt)
1 - pnorm(q = 54.4, mean = fwgtmean, sd = fwgtsd)
#Empirical distribution
sum(fdims$wgt > 54.4)/length(fdims$wgt)
#Theoretical Normal Distribution
fwgtmean <- mean(fdims$wgt)
fwgtsd   <- sd(fdims$wgt)
1 - pnorm(q = 54.4, mean = fwgtmean, sd = fwgtsd)
#Empirical distribution
sum(fdims$wgt > 54.4)/length(fdims$wgt)
qqnorm(fdims$bii.di)
qqline(fdims$bii.di)
qqnorm(fdims$elb.di)
qqline(fdims$elb.di)
qqnorm(fdims$age)
qqline(fdims$age)
qqnorm(fdims$che.de)
qqline(fdims$che.de)
fkne.dimean = mean(fdims$kne.di)
fkne.disd = sd(fdims$hgt)
sim_norm <- rnorm(n = length(fdims$kne.di), mean = fkne.dimean, sd = fkne.disd)
hist(sim_norm, col = "blue")
hist(fdims$kne.di)
fhgtmean = mean(fdims$hgt)
fhgtsd = sd(fdims$hgt)
sim_norm <- rnorm(n = length(fdims$hgt), mean = fhgtmean, sd = fhgtsd)
hist(sim_norm, col = "blue")
# Normal plot
qqnorm(sim_norm)
qqline(sim_norm, col = "red")
knitr::opts_chunk$set(echo = TRUE)
library(DATA606)
1 - pnorm(-1.35, mean = 0, sd = 1)
normalPlot(mean = 0, sd = 1, bounds=c(-Inf,-1.35), tails = F)
1-pnorm(1.48, mean = 0, sd = 1)
normalPlot(mean = 0, sd = 1, bounds=c(1.48,Inf), tails = F)
1-pnorm(c(-0.4,1.5), mean = 0, sd = 1)
normalPlot(mean = 0, sd = 1, bounds=c(-0.4,1.5), tails = F)
1-pnorm(2, mean = 0, sd = 1)
normalPlot(mean = 0, sd = 1, bounds=c(2,Inf), tails = F)
(Z_Leo <- (4948-4313)/583)
(Z_Mary <- (5513-5261)/807)
round(pnorm(Z_Leo)*100, 2)
round(pnorm(Z_Mary)*100, 2)
heights <- c(54, 55, 56, 56, 57, 58,58, 59, 60, 60, 60, 61, 61, 62, 62, 63, 63, 63, 64, 65, 65, 67, 67, 69, 73)
heights_mean <- mean(heights)
heights_sd <- sd(heights)
#For 1 SD
heights_upper1 <- heights_mean + heights_sd
heights_lower1 <- heights_mean - heights_sd
#For 2 SD
heights_upper2 <- heights_mean + (2*heights_sd)
heights_lower2 <- heights_mean - (2*heights_sd)
#For 3 SD
heights_upper3 <- heights_mean + (3*heights_sd)
heights_lower3 <- heights_mean - (3*heights_sd)
# Result of 1 SD
(length(heights[heights >= heights_lower1 & heights <= heights_upper1]) / length(heights) * 100)
# Result of 2 SD
(length(heights[heights >= heights_lower2 & heights <= heights_upper2]) / length(heights) * 100)
# Result of 3 SD
(length(heights[heights >= heights_lower3 & heights <= heights_upper3]) / length(heights) * 100)
(mean <- 1/0.02)
(SD <-sqrt((1 - 0.02)/0.02^2))
(first_defect_prob <- 1/0.05)
(sd <- sqrt((1 - 0.05)/0.05^2))
dbinom(2, 3, 0.51)
# Rule for disjoint
# P(B) = 0.51, P(G) = 1-0.51 = 0.49
# P = P[{G,B,B})+P({B,G,B})+P({B,B,G}]
prob <- ((0.49*0.51*0.51)+(0.51*0.49*0.51)+(0.51*0.51*0.49))
prob
dbinom(3,8,0.51)
n = 10
k = 3
p= 0.15
q = 0.85
(probability = (factorial(n-1)/(factorial(k-1)*factorial(n-k))*p^k*q^(n-k)))
knitr::opts_chunk$set(echo = TRUE)
library(DATA606)
1 - pnorm(-1.35, mean = 0, sd = 1)
normalPlot(mean = 0, sd = 1, bounds=c(-Inf,-1.35), tails = F)
1-pnorm(1.48, mean = 0, sd = 1)
normalPlot(mean = 0, sd = 1, bounds=c(1.48,Inf), tails = F)
1-pnorm(c(-0.4,1.5), mean = 0, sd = 1)
normalPlot(mean = 0, sd = 1, bounds=c(-0.4,1.5), tails = F)
1-pnorm(2, mean = 0, sd = 1)
normalPlot(mean = 0, sd = 1, bounds=c(2,Inf), tails = F)
(Z_Leo <- (4948-4313)/583)
(Z_Mary <- (5513-5261)/807)
round(pnorm(Z_Leo)*100, 2)
round(pnorm(Z_Mary)*100, 2)
heights <- c(54, 55, 56, 56, 57, 58,58, 59, 60, 60, 60, 61, 61, 62, 62, 63, 63, 63, 64, 65, 65, 67, 67, 69, 73)
heights_mean <- mean(heights)
heights_sd <- sd(heights)
#For 1 SD
heights_upper1 <- heights_mean + heights_sd
heights_lower1 <- heights_mean - heights_sd
#For 2 SD
heights_upper2 <- heights_mean + (2*heights_sd)
heights_lower2 <- heights_mean - (2*heights_sd)
#For 3 SD
heights_upper3 <- heights_mean + (3*heights_sd)
heights_lower3 <- heights_mean - (3*heights_sd)
# Result of 1 SD
(length(heights[heights >= heights_lower1 & heights <= heights_upper1]) / length(heights) * 100)
# Result of 2 SD
(length(heights[heights >= heights_lower2 & heights <= heights_upper2]) / length(heights) * 100)
# Result of 3 SD
(length(heights[heights >= heights_lower3 & heights <= heights_upper3]) / length(heights) * 100)
(mean <- 1/0.02)
(SD <-sqrt((1 - 0.02)/0.02^2))
(first_defect_prob <- 1/0.05)
(sd <- sqrt((1 - 0.05)/0.05^2))
dbinom(2, 3, 0.51)
# Rule for disjoint
# P(B) = 0.51, P(G) = 1-0.51 = 0.49
# P = P[{G,B,B})+P({B,G,B})+P({B,B,G}]
prob <- ((0.49*0.51*0.51)+(0.51*0.49*0.51)+(0.51*0.51*0.49))
prob
dbinom(3,8,0.51)
n = 10
k = 3
p= 0.15
q = 0.85
(probability = (factorial(n-1)/(factorial(k-1)*factorial(n-k))*p^k*q^(n-k)))
setwd("E:/github/MS/DATA606/Data606")
knitr::opts_chunk$set(echo = TRUE)
X <- B + C
hist(X, main = "Histogram of B + C")
(sum(X < 0.5) / 10000)
X <- B + C
hist(X, main = "Histogram of B + C", col = "pink")
(sum(X < 0.5) / 10000)
X <- B + C
hist(X, main = "Histogram of B + C", col = "green")
(sum(X < 0.5) / 10000)
X <- B + C
hist(X, main = "Histogram of B + C", col = "skyblue")
(sum(X < 0.5) / 10000)
X <- B + C
hist(X, main = "Histogram of B + C", col = "sky blue")
(sum(X < 0.5) / 10000)
setwd("E:/github/MS/DATA606/Data606")
